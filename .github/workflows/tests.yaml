name: "Tests"

on:
    pull_request:
    push:
        branches:
            - main

env:
    fail-fast: true
    PHPUNIT_FLAGS: "-v"
    SYMFONY_PHPUNIT_DIR: "$HOME/symfony-bridge/.phpunit"
    SYMFONY_DEPRECATIONS_HELPER: 7

permissions:
    contents: read
    checks: write

jobs:
    test:
        name: "${{ matrix.operating-system }} / PHP ${{ matrix.php-version }}"
        runs-on: ${{ matrix.operating-system }}
        continue-on-error: false

        strategy:
            matrix:
                operating-system: ['ubuntu-latest']
                php-version: ['8.1', '8.2']

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v3

            - name: "Install PHP with extensions"
              uses: shivammathur/setup-php@v2
              with:
                  coverage: "none"
                  extensions: "intl, mbstring, pdo_sqlite"
                  php-version: ${{ matrix.php-version }}
                  tools: composer:v2

            - name: "Add PHPUnit matcher"
              run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            - name: "Set composer cache directory"
              id: composer-cache
              run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
              shell: bash

            - name: "Cache composer"
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-${{ matrix.php-version }}-composer-${{ hashFiles('composer.json') }}
                  restore-keys: ${{ runner.os }}-${{ matrix.php-version }}-composer-

            - name: "Install dependencies"
              run: composer install --no-interaction --no-progress

            - name: "PHPUnit version"
              run: vendor/bin/phpunit --version

            - name: Create local database
              run: |
                mkdir -p TestApplication/data/ TestApplication/var
                bin/console doctrine:database:create -e test
                bin/console doctrine:schema:create -e test
                bin/console doctrine:fixture:load -e test --purge-with-truncate -n

            - name: "Run tests"
              run: vendor/bin/phpunit ${{ env.PHPUNIT_FLAGS }}

            - name: Test Summary
              uses: mikepenz/action-junit-report@v3
              with:
                report_paths: "var/results/**/*.xml"
              if: always()
